from news.models import *

Создать двух пользователей (с помощью метода User.objects.create_user('username')).
u1 = User.objects.create_user(username='user1')
u2 = User.objects.create_user(username='user2')

Создать два объекта модели Author, связанные с пользователями.
Author.objects.create(authorUser=u1)
Author.objects.create(authorUser=u2)

Добавить 4 категории в модель Category.
Category.objects.create(name='Global')
Category.objects.create(name='IT')
Category.objects.create(name='Music')
Category.objects.create(name='Cinema')

Добавить 2 статьи и 1 новость.
author = Author.objects.get(id=1)
Post.objects.create(author=author, categoryType='AR',title='Article1', text='big text')
Post.objects.create(author=author, categoryType='AR',title='Article12', text='big text')
Post.objects.create(author=author, categoryType='NW',title='News1', text='big text')


Присвоить им категории (как минимум в одной статье/новости должно быть не меньше 2 категорий).
Post.objects.get(id=1).postCategory.add(Category.objects.get(id=1))
Post.objects.get(id=1).postCategory.add(Category.objects.get(id=2))

Создать как минимум 4 комментария к разным объектам модели Post (в каждом объекте должен быть как минимум один комментарий).
Comment.objects.create(commentPost=Post.objects.get(id=1),commentUser = User.objects.get(id=5), text = 'The best one!')

Применяя функции like() и dislike() к статьям/новостям и комментариям, скорректировать рейтинги этих объектов.
Comment.objects.get(id=1).like()
Post.objects.get(id=1).like()
Post.objects.get(id=2).dislike()

Обновить рейтинги пользователей.
Author.objects.get(id=1).update_rating()
Author.objects.get(id=1).ratingAuthor

Вывести username и рейтинг лучшего пользователя (применяя сортировку и возвращая поля первого объекта).
a = Author.objects.order_by('-ratingAuthor')[:1]
for i in a:
	i.ratingAuthor
	i.authorUser.username

Вывести дату добавления, username автора, рейтинг, заголовок и превью лучшей статьи, основываясь на лайках/дислайках к этой статье.
b = Post.objects.order_by('-rating')[:1]
for i in b:
	i.dateCreation
	i.author
	i.rating
	i.title
	i.preview()


Вывести все комментарии (дата, пользователь, рейтинг, текст) к этой статье.
c = Comment.objects.filter(commentPost__in=b)
for i in c:
	print(i.text)







